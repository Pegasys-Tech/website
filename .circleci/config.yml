version: 2
jobs:
  build-job:
    docker:
      - image: circleci/ruby:2.4.1-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-3-dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-3-dependencies-{{ arch }}-{{ .Branch }}-
            - v1-3-dependencies-{{ arch }}-
      - restore_cache:
          keys:
            - v1-1-node-modules-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json"}}
            - v1-1-node-modules-{{ arch }}-{{ .Branch }}-
            - v1-1-node-modules-{{ arch }}
      - run:
          name: Update Bundler
          command: gem install bundler
      - run:
          name: Ruby dependencies
          command: bundle install --path vendor/bundle && bundle clean

      - run:
          name: Node dependencies
          command: npm install

      - save_cache:
          paths:
            - vendor/bundle
          key: v1-3-dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

      - save_cache:
          paths:
            - ./node_modules/
          key: v1-1-node-modules-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json"}}
      - run:
          name: Build
          command: bundle exec jekyll build --verbose
      - run:
          name: Get Checksum
          command: find public/ -type f -name "*" -exec md5sum {} + | awk '{print $1}' | sort | md5sum > checkfile
      - save_cache:
          key: public-cache-{{ checksum "checkfile" }}
          paths:
            - ./public/
  deploy-job:
    docker:
      - image: circleci/ruby:2.4.1-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-1-node-modules-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json"}}
            - v1-1-node-modules-{{ arch }}-{{ .Branch }}-
            - v1-1-node-modules-{{ arch }}
      - restore_cache:
          keys:
            - public-cache-
      - run:
          name: Deploy Master to Firebase
          command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN

workflows:
      version: 2
      -deploy:
        jobs:
          - build-job
          - deploy-job:
              requires:
                - build-job
              filters:
                branches:
                  only: master
